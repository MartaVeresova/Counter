{"version":3,"sources":["App.module.css","Buttons.tsx","Counter.tsx","SetValue.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Buttons","props","className","s","buttons","button","onClick","inc","disabled","number","reset","Counter","container","maxNumber","SetValue","input","type","set","App","useState","setNumber","localStorage","setItem","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,UAAY,uBAAuB,OAAS,oBAAoB,QAAU,qBAAqB,OAAS,oBAAoB,UAAY,uBAAuB,MAAQ,qB,sICQlL,SAASC,EAAQC,GACpB,OACI,sBAAKC,UAAWC,IAAEC,QAAlB,UACI,wBAAQF,UAAWC,IAAEE,OAAQC,QAASL,EAAMM,IAAKC,SAA2B,IAAjBP,EAAMQ,OAAjE,iBACA,wBAAQP,UAAWC,IAAEE,OAAQC,QAASL,EAAMS,MAAOF,UAAWP,EAAMQ,OAApE,sBCHL,SAASE,EAAQV,GAEpB,OACI,sBAAKC,UAAWC,IAAES,UAAlB,UACI,sBAAMV,UAA4B,IAAjBD,EAAMQ,OAAN,UAAwBN,IAAEM,OAA1B,YAAoCN,IAAEU,WAAtC,UAAuDV,IAAEM,QAA1E,SACKR,EAAMQ,SAEX,cAACT,EAAD,CACIO,IAAKN,EAAMM,IACXG,MAAOT,EAAMS,MACbD,OAAQR,EAAMQ,YCbvB,SAASK,EAASb,GACrB,OACI,sBAAKC,UAAWC,IAAES,UAAlB,UACI,qBAAKV,UAAWC,IAAEM,OAAlB,SACI,sBAAKP,UAAWC,IAAEY,MAAlB,UACI,uBAAOb,UAAWC,IAAEY,MAAOC,KAAK,WAChC,uBAAOd,UAAWC,IAAEY,MAAOC,KAAK,gBAGxC,wBAAQd,UAAWC,IAAEE,OAAQC,QAASL,EAAMgB,IAA5C,oBCgBGC,MA5Bf,WAAgB,IAAD,EACiBC,mBAAS,GAD1B,mBACJV,EADI,KACIW,EADJ,OAEeD,mBAAS,GAFxB,mBAcX,OAdW,UAeP,gCACI,cAACR,EAAD,CACIJ,IAbA,WACRa,EAAUX,EAAS,IAaXC,MAXE,WACVU,EAAU,IAWFX,OAAQA,IAEZ,cAACK,EAAD,CACIG,IAZA,WACRI,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUf,WCD7CgB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b7049632.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container___eohb\",\"number\":\"App_number__2EE35\",\"buttons\":\"App_buttons__2C-Uu\",\"button\":\"App_button__3jTzw\",\"maxNumber\":\"App_maxNumber__2miTr\",\"input\":\"App_input__3DFGW\"};","import s from './App.module.css';\r\nimport React from 'react';\r\n\r\nexport type ButtonsType = {\r\n    inc: () => void\r\n    reset: () => void\r\n    number: number\r\n}\r\n\r\nexport function Buttons(props: ButtonsType) {\r\n    return (\r\n        <div className={s.buttons}>\r\n            <button className={s.button} onClick={props.inc} disabled={props.number === 5}>inc</button>\r\n            <button className={s.button} onClick={props.reset} disabled={!props.number}>reset</button>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport s from './App.module.css';\r\nimport {Buttons} from './Buttons';\r\n\r\nexport type CounterType = {\r\n    inc: () => void\r\n    reset: () => void\r\n    number: number\r\n}\r\n\r\nexport function Counter(props: CounterType) {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <span className={props.number === 5 ? `${s.number} ${s.maxNumber}` : `${s.number}`}>\r\n                {props.number}\r\n            </span>\r\n            <Buttons\r\n                inc={props.inc}\r\n                reset={props.reset}\r\n                number={props.number}\r\n            />\r\n        </div>\r\n    )\r\n}","import s from './App.module.css';\r\nimport React from 'react';\r\n\r\nexport type SetValueType = {\r\n    set: () => void\r\n}\r\n\r\nexport function SetValue(props: SetValueType) {\r\n    return (\r\n        <div className={s.container}>\r\n            <div className={s.number}>\r\n                <div className={s.input}>\r\n                    <input className={s.input} type=\"number\"/>\r\n                    <input className={s.input} type=\"number\"/>\r\n                </div>\r\n            </div>\r\n            <button className={s.button} onClick={props.set}>\r\n                set\r\n            </button>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {Counter} from './Counter';\r\nimport {SetValue} from './SetValue';\r\n\r\nfunction App() {\r\n    const [number, setNumber] = useState(0)\r\n    const [value, setValue] = useState(0)\r\n\r\n    const inc = () => {\r\n        setNumber(number + 1)\r\n    }\r\n    const reset = () => {\r\n        setNumber(0)\r\n    }\r\n    const set = () => {\r\n        localStorage.setItem('counterValue', JSON.stringify(number))\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Counter\r\n                inc={inc}\r\n                reset={reset}\r\n                number={number}\r\n            />\r\n            <SetValue\r\n                set={set}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}