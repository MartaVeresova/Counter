{"version":3,"sources":["App.module.css","Counter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","Counter","props","className","s","container","number","maxNumber","buttons","button","onClick","inc","disabled","reset","App","useState","setNumber","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,UAAY,uBAAuB,OAAS,oBAAoB,QAAU,qBAAqB,OAAS,oBAAoB,UAAY,yB,sICQnJ,SAASC,EAAQC,GAEpB,OACI,sBAAKC,UAAWC,IAAEC,UAAlB,UACI,sBAAMF,UAA4B,IAAjBD,EAAMI,OAAN,UAAwBF,IAAEE,OAA1B,YAAoCF,IAAEG,WAAtC,UAAuDH,IAAEE,QAA1E,SACKJ,EAAMI,SAEX,sBAAKH,UAAWC,IAAEI,QAAlB,UACQ,wBAAQL,UAAWC,IAAEK,OAAQC,QAASR,EAAMS,IAAKC,SAA2B,IAAjBV,EAAMI,OAAjE,iBACA,wBAAQH,UAAWC,IAAEK,OAAQC,QAASR,EAAMW,MAAOD,UAAWV,EAAMI,OAApE,yBCKLQ,MApBf,WAAgB,IAAD,EACiBC,mBAAS,GAD1B,mBACJT,EADI,KACIU,EADJ,KASX,OACI,8BACI,cAACf,EAAD,CACIU,IAVA,WACRK,EAAUV,EAAS,IAUXO,MARE,WACVG,EAAU,IAQFV,OAAQA,OCHTW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.40759c7a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container___eohb\",\"number\":\"App_number__2EE35\",\"buttons\":\"App_buttons__2C-Uu\",\"button\":\"App_button__3jTzw\",\"maxNumber\":\"App_maxNumber__2miTr\"};","import React from 'react';\r\nimport s from './App.module.css';\r\n\r\nexport type CounterType = {\r\n    inc: () => void\r\n    reset: () => void\r\n    number: number\r\n}\r\n\r\nexport function Counter(props: CounterType) {\r\n\r\n    return (\r\n        <div className={s.container}>\r\n            <span className={props.number === 5 ? `${s.number} ${s.maxNumber}` : `${s.number}`}>\r\n                {props.number}\r\n            </span>\r\n            <div className={s.buttons}>\r\n                    <button className={s.button} onClick={props.inc} disabled={props.number === 5}>inc</button>\r\n                    <button className={s.button} onClick={props.reset} disabled={!props.number}>reset</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport {Counter} from './Counter';\r\n\r\nfunction App() {\r\n    const [number, setNumber] = useState(0)\r\n    const inc = () => {\r\n        setNumber(number + 1)\r\n    }\r\n    const reset = () => {\r\n        setNumber(0)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Counter\r\n                inc={inc}\r\n                reset={reset}\r\n                number={number}\r\n            />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}